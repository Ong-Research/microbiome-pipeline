

# This file should contain everything to configure the workflow on 
# a global scale. In case of sample based data, it should be complemented by 
# a samples.tsv file that contains one row per sample.

# general parameters for run
asv_prefix: "HSD2M"
sample_table: "samples.tsv"
threads: 32

# dada2 filter and trim
filter_and_trim:
  dust_dec2018:
    truncQ: 12
    truncLen: [280, 250]
    trimLeft: 0
    trimRight: 0
    maxLen: Inf
    minLen: 100
    maxN: 0
    minQ: 0
    maxEE: [2, 2]
  dust_dec2019:
    truncQ: 12
    truncLen: [280, 250]
    trimLeft: 0
    trimRight: 0
    maxLen: Inf
    minLen: 100
    maxN: 0
    minQ: 0
    maxEE: [2, 2]
  dust_jun2021:
    truncQ: 12
    truncLen: [280, 250]
    trimLeft: 0
    trimRight: 0
    maxLen: Inf
    minLen: 100
    maxN: 0
    minQ: 0
    maxEE: [2, 2]

# dada2 learn error rates
error_rates:
  dust_dec2018:
    learn_nbases: 100e6
  dust_dec2019:
    learn_nbases: 100e6
  dust_jun2021:
    learn_nbases: 100e6
    
# dada2 merge pairs
merge_pairs:
  dust_dec2018:
    minOverlap: 50
    maxMismatch: 0
  dust_dec2019:
    minOverlap: 50
    maxMismatch: 0
  dust_jun2021:
    minOverlap: 50
    maxMismatch: 0

# dada2 remove chimeras
remove_chimeras:
  minSampleFraction: 0.9
  ignoreNNegatives: 1
  minFoldParentOverAbundance: 1.5
  allowOneOf: FALSE
  minOneOffParentDistance: 4
  maxShift: 16
  chimera_method: "consensus"    

# qc parameters
# negctrl_prop: proportion of negative control reads to be subtracted from sample reads vectors
# max_length_variation: bps can a sequence be longer or shorter than the mode sequence length
# low_abundance_perc: min percentage of total_reads in an ASV
qc_parameters:
  negctrl_prop: 0.5
  max_length_variation: 50
  low_abundance_perc: 0.0001 

# downloaded from https://benlangmead.github.io/aws-indexes/k2
# the first three contain only bacteria, the last one contains viral, human, archea too
kraken_dbs:
  {
    greengenes: "data/kraken_dbs/16S_Greengenes_k2db",
    silva132: "data/kraken_dbs/16S_SILVA132_k2db",
    silva138: "data/kraken_dbs/16S_SILVA138_k2db",
    rdp: "data/kraken_dbs/16S_RDP_k2db",
    k2_std: "data/kraken_dbs/k2_standard",
    k2_std_08gb: "data/kraken_dbs/k2_standard_08gb",
    k2_std_16gb: "data/kraken_dbs/k2_standard_16gb",
    minikraken_v1: "data/kraken_dbs/minikraken2_v1_8GB"
  }

# According to this issue:
# https://github.com/DerrickWood/kraken2/issues/167  
# For general purposes, 0.05 or 0.1 for general purposes.
# If the classification of ASVs / OTUs of reads < 10 is important, then use
# something higher, e.g. 0.5 
# more details: https://github.com/DerrickWood/kraken2/wiki/Manual#output-formats
kraken_confidence: 0.01
kraken_db_merge: ["k2_std", "greengenes", "silva132"]
kraken_blast_min_perc: 0.9

blast:
  perc: 0.3
  dbs: ["16S_ribosomal_RNA"] #, "ref_prok_rep_genomes"]
  format: "'6 qseqid sseqid evalue bitscore score mismatch positive stitle qframe sframe length pident'"
  # format: "'6 qseqid sseqid evalue bitscore score mismatch positive stitle pident length'"



# beta_div
# any of c("bray", "fjaccard", "euclidean",
  # "hellinger", "mahalanobis", "manhattan", "bhjattacharyya", "canberra",
  # "chord", "unifrac", "w_unifrac", "w_unifrac_norm")
# beta:
#   comps: 20
#   beta_div: ["bray", "fjaccard", "unifrac", "w_unifrac"]
#   beta_group: ["all"]
